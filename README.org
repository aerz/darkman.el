#+title: darkman.el

This package provides seamless integration between [[https://darkman.whynothugo.nl][Darkman]] and [[https://gnu.org/software/emacs][Emacs]]
using the [[https://www.freedesktop.org/wiki/Software/dbus/][D-Bus]] protocol.

* Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:

If you're using Emacs 29, install the package in one go with
=package-vc=:

#+begin_src emacs-lisp
(package-vc-install "https://github.com/grtcdr/darkman.el" :last-release)
(require 'darkman)
#+end_src

And optionally, using the =use-package= macro:

#+begin_src emacs-lisp
(use-package darkman
  :init
  (package-vc-install "https://github.com/grtcdr/darkman.el" :last-release))
#+end_src

Otherwise, begin by cloning the repository:

#+begin_src sh
git clone --branch 0.2 https://github.com/grtcdr/darkman.el darkman
#+end_src

Now, add the package to your =load-path=:

#+begin_src emacs-lisp
(add-to-list 'load-path "darkman")
#+end_src

Finally, require the package like so:

#+begin_src emacs-lisp
(require 'darkman)
#+end_src

* Usage

For =darkman.el= to work properly, the D-Bus and Darkman services
should be running.

** Automatically set the theme on startup

In your =init.el= file, define which theme is associated with which
mode, by default =modus-themes= are used, but we'll use the =tango=
variants in this example.

#+begin_src emacs-lisp
(setq darkman-themes '(:light tango :dark tango-dark))
#+end_src

You could also use =M-x customize-group darkman RET= to customize the
variable.

Instead of manually configuring a theme, you should do it this way:

#+begin_src emacs-lisp
(load-theme (darkman-get-theme))
#+end_src

=darkman-get-theme= returns a theme based on the current mode and the
themes you specified in the =darkman-themes= variable.

** Automatically switch themes when the mode changes

=darkman.el= can listen for any signals to change the theme without
requiring you to manually create any scripts.

You can enable this behavior by enabling the minor mode:

#+begin_src emacs-lisp
(darkman-mode)
#+end_src

** Other functions

=M-x darkman-toggle= will toggle the mode of the Darkman service from
within Emacs.

Additionally, you can use the =darkman-get= and =darkman-set=
functions to manually get and set the mode of the service
respectively.

* Debugging

** Nothing's working?

*** Is D-Bus running?

Use your service manager to verify whether the service is running,
here's an example using =systemd=:

#+begin_src sh
systemctl status dbus
#+end_src

#+begin_example
● dbus.service - D-Bus System Message Bus
     Loaded: loaded
     Active: active (running)
#+end_example

*** Is Darkman running?

Use your service manager to verify whether the service is running,
here's an example using =systemd=:

#+begin_src sh
systemctl status --user darkman
#+end_src

#+begin_example
● darkman.service - Framework for dark-mode and light-mode transitions.
     Loaded: loaded
     Active: active (running)
#+end_example

*** Is Emacs built with D-Bus support?

Usually it is, unless you're building from source, in which case you
can verify whether or not Emacs was built with D-Bus support using
=C-h v system-configuration-features RET= which should list =DBUS=.

* Contributors

Hey (future-)contributors, your help means so much to me, whether it
be code, documentation, general advice or constructive feedback!

** Code

- Aleksei Fedotov

* Citing

You may cite this project in your research like so:

#+begin_src bibtex
@misc{aba23darkman,
  author = {Aziz Ben Ali},
   title = {Seamless integration between Darkman and Emacs},
     url = {https://github.com/grtcdr/darkman.el},
    year = 2023
}
#+end_src

* License

#+include: "LICENSE" ascii
